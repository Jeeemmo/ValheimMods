//TreatedTrollHelm Prefab

public class TreatedTrollHelm : PrefabConfig
{
    public TreatedTrollHelm() : base("TreatedTrollHelm", "HelmetTrollLeather")
    {
        // Nothing to do here
        // "Prefab" wil be set for us automatically after this is called
    }

    public override void Register()
    {
        // Configure item drop
        // ItemDrop is a component on GameObjects which determines info about the item when it's picked up in the inventory
        ItemDrop item = Prefab.GetComponent<ItemDrop>();
        item.m_itemData.m_shared.m_name = "Treated Troll Hood";
        item.m_itemData.m_shared.m_description = "Does not protect from ROUSes";
        item.m_itemData.m_shared.m_maxQuality = 3
		item.m_itemData.m_shared.m_weight = 1
		item.m_itemData.m_shared.m_armor = 8
		item.m_itemData.m_shared.m_armorPerLevel = 2
		item.m_itemData.m_shared.m_damageModifiers.m_type = 256
		item.m_itemData.m_shared.m_damageModifiers.m_modifier = 1
    }
}

//TreatedTrollHelm Recipe

{
            // Items
            ObjectManager.Instance.RegisterItem("TreatedTrollHelm");

            // Recipes
            ObjectManager.Instance.RegisterRecipe(new RecipeConfig()
            {
                // Name of the recipe (defaults to "Recipe_YourItem")
                Name = "Recipe_TreatedTrollHelm",

                // Name of the prefab for the crafted item
                Item = "TreatedTrollHelm",

                // Name of the prefab for the crafting station we wish to use
                // Can set this to null or leave out if you want your recipe to be craftable in your inventory
                CraftingStation = "UpgradeTable",  
				
				MinStationLevel = 2

                // List of requirements to craft your item
                Requirements = new PieceRequirementConfig[]
                {
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "HelmetTrollLeather",

                        // Amount required
                        Amount = 1
						
						AmountPerLevel = 0
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "TrollHide",

                        // Amount required
                        Amount = 5
						
						AmountPerLevel = 3
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "Guck",

                        // Amount required
                        Amount = 10
						
						AmountPerLevel = 5
                    }
                }



//TreatedTrollChest Prefab

public class TreatedTrollChest : PrefabConfig
{
    public TreatedTrollChest() : base("TreatedTrollChest", "ArmorTrollLeatherChest")
    {
        // Nothing to do here
        // "Prefab" wil be set for us automatically after this is called
    }

    public override void Register()
    {
        // Configure item drop
        // ItemDrop is a component on GameObjects which determines info about the item when it's picked up in the inventory
        ItemDrop item = Prefab.GetComponent<ItemDrop>();
        item.m_itemData.m_shared.m_name = "Treated Troll Jerkin";
        item.m_itemData.m_shared.m_description = "Does not protect from ROUSes";
        item.m_itemData.m_shared.m_maxQuality = 3
		item.m_itemData.m_shared.m_weight = 5
		item.m_itemData.m_shared.m_armor = 8
		item.m_itemData.m_shared.m_armorPerLevel = 2
		item.m_itemData.m_shared.m_movementModifier = 0.025
		item.m_itemData.m_shared.m_damageModifiers.m_modifier = 1
    }
}


//TreatedTrollChest Recipe

{
            // Items
            ObjectManager.Instance.RegisterItem("TreatedTrollChest");

            // Recipes
            ObjectManager.Instance.RegisterRecipe(new RecipeConfig()
            {
                // Name of the recipe (defaults to "Recipe_YourItem")
                Name = "Recipe_TreatedTrollChest",

                // Name of the prefab for the crafted item
                Item = "TreatedTrollChest",

                // Name of the prefab for the crafting station we wish to use
                // Can set this to null or leave out if you want your recipe to be craftable in your inventory
                CraftingStation = "UpgradeTable",  
				
				MinStationLevel = 2 

                // List of requirements to craft your item
                Requirements = new PieceRequirementConfig[]
                {
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "ArmorTrollLeatherChest",

                        // Amount required
                        Amount = 1
						
						AmountPerLevel = 0
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "TrollHide",

                        // Amount required
                        Amount = 10
						
						AmountPerLevel = 5
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "Guck",

                        // Amount required
                        Amount = 15
						
						AmountPerLevel = 8
                    }
                }
				

//TreatedTrollLegs Prefab

public class TreatedTrollLegs : PrefabConfig
{
    public TreatedTrollLegs() : base("TreatedTrollLegs", "ArmorTrollLeatherLegs")
    {
        // Nothing to do here
        // "Prefab" wil be set for us automatically after this is called
    }

    public override void Register()
    {
        // Configure item drop
        // ItemDrop is a component on GameObjects which determines info about the item when it's picked up in the inventory
        ItemDrop item = Prefab.GetComponent<ItemDrop>();
        item.m_itemData.m_shared.m_name = "Treated Troll Leggings";
        item.m_itemData.m_shared.m_description = "Does not protect from ROUSes";
        item.m_itemData.m_shared.m_maxQuality = 3
		item.m_itemData.m_shared.m_weight = 5
		item.m_itemData.m_shared.m_armor = 8
		item.m_itemData.m_shared.m_armorPerLevel = 2
		item.m_itemData.m_shared.m_damageModifiers.m_type = 256
		item.m_itemData.m_shared.m_damageModifiers.m_modifier = 1
    }
}


//TreatedTrollLegs Recipe

{
            // Items
            ObjectManager.Instance.RegisterItem("TreatedTrollLegs");

            // Recipes
            ObjectManager.Instance.RegisterRecipe(new RecipeConfig()
            {
                // Name of the recipe (defaults to "Recipe_YourItem")
                Name = "Recipe_TreatedTrollLegs",

                // Name of the prefab for the crafted item
                Item = "TreatedTrollLegs",

                // Name of the prefab for the crafting station we wish to use
                // Can set this to null or leave out if you want your recipe to be craftable in your inventory
                CraftingStation = "UpgradeTable",  
				
				MinStationLevel = 2

                // List of requirements to craft your item
                Requirements = new PieceRequirementConfig[]
                {
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "ArmorTrollLeatherLegs",

                        // Amount required
                        Amount = 1
						
						AmountPerLevel = 0
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "TrollHide",

                        // Amount required
                        Amount = 8
						
						AmountPerLevel = 4
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "Guck",

                        // Amount required
                        Amount = 10
						
						AmountPerLevel = 5
                    }
                }
				

//TreatedTrollCape Prefab

public class TreatedTrollCape : PrefabConfig
{
    public TreatedTrollCape() : base("TreatedTrollCape", "CapeTrollHide")
    {
        // Nothing to do here
        // "Prefab" wil be set for us automatically after this is called
    }

    public override void Register()
    {
        // Configure item drop
        // ItemDrop is a component on GameObjects which determines info about the item when it's picked up in the inventory
        ItemDrop item = Prefab.GetComponent<ItemDrop>();
        item.m_itemData.m_shared.m_name = "Treated Troll Cape";
        item.m_itemData.m_shared.m_description = "Does not protect from ROUSes";
        item.m_itemData.m_shared.m_maxQuality = 3
		item.m_itemData.m_shared.m_weight = 1
		item.m_itemData.m_shared.m_armor = 1
		item.m_itemData.m_shared.m_armorPerLevel = 1
		item.m_itemData.m_shared.m_damageModifiers.m_type = 256
		item.m_itemData.m_shared.m_damageModifiers.m_modifier = 1
	}
}


//TreatedTrollCape Recipe

{
            // Items
            ObjectManager.Instance.RegisterItem("TreatedTrollCape");

            // Recipes
            ObjectManager.Instance.RegisterRecipe(new RecipeConfig()
            {
                // Name of the recipe (defaults to "Recipe_YourItem")
                Name = "Recipe_TreatedTrollCape",

                // Name of the prefab for the crafted item
                Item = "TreatedTrollCape",

                // Name of the prefab for the crafting station we wish to use
                // Can set this to null or leave out if you want your recipe to be craftable in your inventory
                CraftingStation = "UpgradeTable",  
				
				MinStationLevel = 2

                // List of requirements to craft your item
                Requirements = new PieceRequirementConfig[]
                {
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "CapeTrollHide",

                        // Amount required
                        Amount = 1
						
						AmountPerLevel = 0
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "TrollHide",

                        // Amount required
                        Amount = 5
						
						AmountPerLevel = 5
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "Guck",

                        // Amount required
                        Amount = 10
						
						AmountPerLevel = 5
                    }
                }