//StitchedTrollHelm Prefab

public class StitchedTrollHelm : PrefabConfig
{
    public StitchedTrollHelm() : base("StitchedTrollHelm", "HelmetTrollLeather")
    {
        // Nothing to do here
        // "Prefab" wil be set for us automatically after this is called
    }

    public override void Register()
    {
        // Configure item drop
        // ItemDrop is a component on GameObjects which determines info about the item when it's picked up in the inventory
        ItemDrop item = Prefab.GetComponent<ItemDrop>();
        item.m_itemData.m_shared.m_name = "Stitched Troll Hood";
        item.m_itemData.m_shared.m_description = "Better stitching allows for freedom of movement without compromising protection";
        item.m_itemData.m_shared.m_maxQuality = 3
		item.m_itemData.m_shared.m_weight = 2
		item.m_itemData.m_shared.m_armor = 12
		item.m_itemData.m_shared.m_armorPerLevel = 2
    }
}

//StitchedTrollHelm Recipe

{
            // Items
            ObjectManager.Instance.RegisterItem("StitchedTrollHelm");

            // Recipes
            ObjectManager.Instance.RegisterRecipe(new RecipeConfig()
            {
                // Name of the recipe (defaults to "Recipe_YourItem")
                Name = "Recipe_StitchedTrollHelm",

                // Name of the prefab for the crafted item
                Item = "StitchedTrollHelm",

                // Name of the prefab for the crafting station we wish to use
                // Can set this to null or leave out if you want your recipe to be craftable in your inventory
                CraftingStation = "UpgradeTable",

				MinStationLevel = 2 				

                // List of requirements to craft your item
                Requirements = new PieceRequirementConfig[]
                {
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "HelmetTrollLeather",

                        // Amount required
                        Amount = 1
						
						AmountPerLevel = 0
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "TrollHide",

                        // Amount required
                        Amount = 5
						
						AmountPerLevel = 3
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "Linen",

                        // Amount required
                        Amount = 40
						
						AmountPerLevel = 20
                    }
                }



//StitchedTrollChest Prefab

public class StitchedTrollChest : PrefabConfig
{
    public StitchedTrollChest() : base("StitchedTrollChest", "ArmorTrollLeatherChest")
    {
        // Nothing to do here
        // "Prefab" wil be set for us automatically after this is called
    }

    public override void Register()
    {
        // Configure item drop
        // ItemDrop is a component on GameObjects which determines info about the item when it's picked up in the inventory
        ItemDrop item = Prefab.GetComponent<ItemDrop>();
        item.m_itemData.m_shared.m_name = "Troll Hide Brigandine";
        item.m_itemData.m_shared.m_description = "Better Stitching allows for freedom of movement without compromising protection";
        item.m_itemData.m_shared.m_maxQuality = 3
		item.m_itemData.m_shared.m_weight = 6
		item.m_itemData.m_shared.m_armor = 12
		item.m_itemData.m_shared.m_armorPerLevel = 2
		item.m_itemData.m_shared.m_movementModifier = 0.025
    }
}


//StitchedTrollChest Recipe

{
            // Items
            ObjectManager.Instance.RegisterItem("StitchedTrollChest");

            // Recipes
            ObjectManager.Instance.RegisterRecipe(new RecipeConfig()
            {
                // Name of the recipe (defaults to "Recipe_YourItem")
                Name = "Recipe_StitchedTrollChest",

                // Name of the prefab for the crafted item
                Item = "StitchedTrollChest",

                // Name of the prefab for the crafting station we wish to use
                // Can set this to null or leave out if you want your recipe to be craftable in your inventory
                CraftingStation = "UpgradeTable", 
				
				MinStationLevel = 2 

                // List of requirements to craft your item
                Requirements = new PieceRequirementConfig[]
                {
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "ArmorTrollLeatherChest",

                        // Amount required
                        Amount = 1
						
						AmountPerLevel = 0
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "TrollHide",

                        // Amount required
                        Amount = 10
						
						AmountPerLevel = 5
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "Linen",

                        // Amount required
                        Amount = 40
						
						AmountPerLevel = 20
                    }
                }
				

//StitchedTrollLegs Prefab

public class StitchedTrollLegs : PrefabConfig
{
    public StitchedTrollLegs() : base("StitchedTrollLegs", "ArmorTrollLeatherLegs")
    {
        // Nothing to do here
        // "Prefab" wil be set for us automatically after this is called
    }

    public override void Register()
    {
        // Configure item drop
        // ItemDrop is a component on GameObjects which determines info about the item when it's picked up in the inventory
        ItemDrop item = Prefab.GetComponent<ItemDrop>();
        item.m_itemData.m_shared.m_name = "Stitched Troll Leggings";
        item.m_itemData.m_shared.m_description = "Better Stitching allows for freedom of movement without compromising protection";
        item.m_itemData.m_shared.m_maxQuality = 4
		item.m_itemData.m_shared.m_weight = 6
		item.m_itemData.m_shared.m_armor = 12
		item.m_itemData.m_shared.m_armorPerLevel = 2
		item.m_itemData.m_shared.m_movementModifier = 0.025
    }
}


//StitchedTrollLegs Recipe

{
            // Items
            ObjectManager.Instance.RegisterItem("StitchedTrollLegs");

            // Recipes
            ObjectManager.Instance.RegisterRecipe(new RecipeConfig()
            {
                // Name of the recipe (defaults to "Recipe_YourItem")
                Name = "Recipe_StitchedTrollLegs",

                // Name of the prefab for the crafted item
                Item = "StitchedTrollLegs",

                // Name of the prefab for the crafting station we wish to use
                // Can set this to null or leave out if you want your recipe to be craftable in your inventory
                CraftingStation = "UpgradeTable", 
				
				MinStationLevel = 2 

                // List of requirements to craft your item
                Requirements = new PieceRequirementConfig[]
                {
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "ArmorTrollLeatherLegs",

                        // Amount required
                        Amount = 1
						
						AmountPerLevel = 0
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "TrollHide",

                        // Amount required
                        Amount = 8
						
						AmountPerLevel = 5
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "Linen",

                        // Amount required
                        Amount = 20
						
						AmountPerLevel = 10
                    }
                }
				

//StitchedTrollCape Prefab

public class StitchedTrollCape : PrefabConfig
{
    public StitchedTrollCape() : base("StitchedTrollCape", "CapeTrollHide")
    {
        // Nothing to do here
        // "Prefab" wil be set for us automatically after this is called
    }

    public override void Register()
    {
        // Configure item drop
        // ItemDrop is a component on GameObjects which determines info about the item when it's picked up in the inventory
        ItemDrop item = Prefab.GetComponent<ItemDrop>();
        item.m_itemData.m_shared.m_name = "Stitched Troll Cape";
        item.m_itemData.m_shared.m_description = "Better Stitching allows for freedom of movement without compromising protection";
        item.m_itemData.m_shared.m_maxQuality = 4
		item.m_itemData.m_shared.m_weight = 2
		item.m_itemData.m_shared.m_armor = 2
		item.m_itemData.m_shared.m_armorPerLevel = 1
	}
}


//StitchedTrollCape Recipe

{
            // Items
            ObjectManager.Instance.RegisterItem("StitchedTrollCape");

            // Recipes
            ObjectManager.Instance.RegisterRecipe(new RecipeConfig()
            {
                // Name of the recipe (defaults to "Recipe_YourItem")
                Name = "Recipe_StitchedTrollCape",

                // Name of the prefab for the crafted item
                Item = "StitchedTrollCape",

                // Name of the prefab for the crafting station we wish to use
                // Can set this to null or leave out if you want your recipe to be craftable in your inventory
                CraftingStation = "UpgradeTable", 
				
				MinStationLevel = 2 

                // List of requirements to craft your item
                Requirements = new PieceRequirementConfig[]
                {
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "CapeTrollHide",

                        // Amount required
                        Amount = 1
						
						AmountPerLevel = 0
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "TrollHide",

                        // Amount required
                        Amount = 5
						
						AmountPerLevel = 4
                    },
                    new PieceRequirementConfig()
                    {
                        // Prefab name of requirement
                        Item = "Linen",

                        // Amount required
                        Amount = 15
						
						AmountPerLevel = 5
                    }
                }